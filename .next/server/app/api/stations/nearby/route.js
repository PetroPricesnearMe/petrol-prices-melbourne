(()=>{var a={};a.id=753,a.ids=[753],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10189:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>D,patchFetch:()=>C,routeModule:()=>y,serverHooks:()=>B,workAsyncStorage:()=>z,workUnitAsyncStorage:()=>A});var d={};c.r(d),c.d(d,{GET:()=>x,dynamic:()=>w});var e=c(95736),f=c(9117),g=c(4044),h=c(39326),i=c(32324),j=c(261),k=c(54290),l=c(85328),m=c(38928),n=c(46595),o=c(3421),p=c(17679),q=c(41681),r=c(63446),s=c(86439),t=c(51356),u=c(10641),v=c(91102);let w="force-dynamic";async function x(a){try{let b=a.nextUrl.searchParams,c=b.get("lat"),d=b.get("lng"),e=b.get("radius");if(!c||!d)return u.NextResponse.json({message:"Latitude and longitude are required",status:400},{status:400});let f=parseFloat(c),g=parseFloat(d),h=e?parseFloat(e):10;if(isNaN(f)||isNaN(g))return u.NextResponse.json({message:"Invalid coordinates",status:400},{status:400});let i=await v.w.findNearby(f,g,h);return u.NextResponse.json({data:i,status:200},{status:200})}catch(a){return console.error("Error fetching nearby stations:",a),u.NextResponse.json({message:"Failed to fetch nearby stations",status:500},{status:500})}}let y=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/stations/nearby/route",pathname:"/api/stations/nearby",filename:"route",bundlePath:"app/api/stations/nearby/route"},distDir:".next",relativeProjectDir:"",resolvedPagePath:"C:\\Users\\zenbo\\Desktop\\PPNM\\src\\app\\api\\stations\\nearby\\route.ts",nextConfigOutput:"standalone",userland:d}),{workAsyncStorage:z,workUnitAsyncStorage:A,serverHooks:B}=y;function C(){return(0,g.patchFetch)({workAsyncStorage:z,workUnitAsyncStorage:A})}async function D(a,b,c){var d;let e="/api/stations/nearby/route";"/index"===e&&(e="/");let g=await y.prepare(a,b,{srcPage:e,multiZoneDraftMode:!1});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!x){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||y.isDev||x||(G="/index"===(G=D)?"/":G);let H=!0===y.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{cacheComponents:!!w.experimental.cacheComponents,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>y.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>y.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await y.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await y.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(b instanceof s.NoFallbackError||await y.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12412:a=>{"use strict";a.exports=require("assert")},19121:a=>{"use strict";a.exports=require("next/dist/server/app-render/action-async-storage.external.js")},21820:a=>{"use strict";a.exports=require("os")},27910:a=>{"use strict";a.exports=require("stream")},28354:a=>{"use strict";a.exports=require("util")},29021:a=>{"use strict";a.exports=require("fs")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:a=>{"use strict";a.exports=require("path")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:a=>{"use strict";a.exports=require("crypto")},55591:a=>{"use strict";a.exports=require("https")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:a=>{"use strict";a.exports=require("zlib")},78335:()=>{},79551:a=>{"use strict";a.exports=require("url")},81630:a=>{"use strict";a.exports=require("http")},83997:a=>{"use strict";a.exports=require("tty")},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},91102:(a,b,c)=>{"use strict";c.d(b,{w:()=>l});var d=c(97311);let e=process.env.BASEROW_API_URL||"https://api.baserow.io",f=process.env.BASEROW_API_TOKEN||"",g=process.env.BASEROW_PETROL_STATIONS_TABLE_ID||"623329";process.env.BASEROW_FUEL_PRICES_TABLE_ID;let h=d.A.create({baseURL:`${e}/api/database/rows/table`,headers:{Authorization:`Token ${f}`,"Content-Type":"application/json"}});function i(a){return{id:a.id,stationName:a["Station Name"],address:a.Address,city:a.City,region:a.Region,postalCode:a["Postal Code"],country:a.Country,latitude:a.Latitude,longitude:a.Longitude,brand:a.brand,locationDetails:a["Location Details"]}}let j={getStations:async()=>{try{return(await h.get(`/${g}/`)).data.results.map(i)}catch(a){throw console.error("Error fetching stations from Baserow:",a),a}},getStationById:async a=>{try{let b=await h.get(`/${g}/${a}/`);return i(b.data)}catch(a){return console.error("Error fetching station from Baserow:",a),null}},createStation:async a=>{try{let b={"Station Name":a.stationName,Address:a.address,City:a.city,Region:a.region,"Postal Code":a.postalCode,Country:a.country,Latitude:a.latitude,Longitude:a.longitude,brand:a.brand,"Location Details":a.locationDetails},c=await h.post(`/${g}/`,b);return i(c.data)}catch(a){throw console.error("Error creating station in Baserow:",a),a}},updateStation:async(a,b)=>{try{let c={};b.stationName&&(c["Station Name"]=b.stationName),b.address&&(c.Address=b.address),b.city&&(c.City=b.city),b.region&&(c.Region=b.region),b.postalCode&&(c["Postal Code"]=b.postalCode),b.country&&(c.Country=b.country),b.latitude&&(c.Latitude=b.latitude),b.longitude&&(c.Longitude=b.longitude),b.brand&&(c.brand=b.brand),b.locationDetails&&(c["Location Details"]=b.locationDetails);let d=await h.patch(`/${g}/${a}/`,c);return i(d.data)}catch(a){throw console.error("Error updating station in Baserow:",a),a}},deleteStation:async a=>{try{await h.delete(`/${g}/${a}/`)}catch(a){throw console.error("Error deleting station from Baserow:",a),a}}};function k(a){return a*Math.PI/180}let l={findAll:async a=>{try{let b=await j.getStations();return a?.fuelType&&(b=b.filter(b=>b.fuelPrices?.some(b=>b.fuelType===a.fuelType))),(a?.minPrice||a?.maxPrice)&&(b=b.filter(b=>{let c=b.fuelPrices?.map(a=>a.pricePerLiter)||[],d=Math.min(...c);return(!a.minPrice||!(d<a.minPrice))&&(!a.maxPrice||!(d>a.maxPrice))})),a?.brands&&a.brands.length>0&&(b=b.filter(b=>b.brand?.some(b=>a.brands?.includes(b)))),a?.sortBy==="price_low_high"&&b.sort((a,b)=>{let c=a.fuelPrices?.map(a=>a.pricePerLiter)||[],d=b.fuelPrices?.map(a=>a.pricePerLiter)||[];return Math.min(...c)-Math.min(...d)}),b}catch(a){throw console.error("Error finding stations:",a),Error("Failed to fetch stations")}},findById:async a=>{try{return await j.getStationById(a)}catch(a){return console.error("Error finding station:",a),null}},findNearby:async(a,b,c)=>{try{return(await j.getStations()).map(c=>{let d=function(a,b){let c=k(b.lat-a.lat),d=k(b.lng-a.lng),e=Math.sin(c/2)*Math.sin(c/2)+Math.cos(k(a.lat))*Math.cos(k(b.lat))*Math.sin(d/2)*Math.sin(d/2),f=2*Math.atan2(Math.sqrt(e),Math.sqrt(1-e));return Math.round(6371*f*10)/10}({lat:a,lng:b},{lat:c.latitude,lng:c.longitude});return{...c,distance:d}}).filter(a=>a.distance<=c).sort((a,b)=>a.distance-b.distance)}catch(a){throw console.error("Error finding nearby stations:",a),Error("Failed to fetch nearby stations")}},create:async a=>{try{return await j.createStation(a)}catch(a){throw console.error("Error creating station:",a),Error("Failed to create station")}},update:async(a,b)=>{try{return await j.updateStation(a,b)}catch(a){throw console.error("Error updating station:",a),Error("Failed to update station")}},delete:async a=>{try{await j.deleteStation(a)}catch(a){throw console.error("Error deleting station:",a),Error("Failed to delete station")}}}},94735:a=>{"use strict";a.exports=require("events")},96487:()=>{}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[586,930,692],()=>b(b.s=10189));module.exports=c})();